'''
What time of day and day of the week do most major incidents happen?
Are there any patterns in the time of day/ day of the week when major incidents occur?
What characteristics stand out in major incidents compared with other accidents?
'''

import pandas as pd
import numpy as np
import datetime
import matplotlib.pyplot as plt

accidents = pd.read_csv(r'./data/accident-data.csv')
aDF = pd.DataFrame(accidents).dropna() #there was no empty data=
#print(df.columns)
'''
Index(['accident_index', 'accident_year', 'accident_reference', 'longitude',
       'latitude', 'accident_severity', 'number_of_vehicles',
       'number_of_casualties', 'date', 'day_of_week', 'time',
       'first_road_class', 'first_road_number', 'road_type', 'speed_limit',
       'junction_detail', 'junction_control', 'second_road_class',
       'second_road_number', 'pedestrian_crossing_human_control',
       'pedestrian_crossing_physical_facilities', 'light_conditions',
       'weather_conditions', 'road_surface_conditions',
       'special_conditions_at_site', 'carriageway_hazards',
       'urban_or_rural_area'],
      dtype='object')
'''

#DATE TIME DATAFRAME:
timeDF=aDF.filter(["accident_index", "number_of_casualties", "date", "day_of_week", "time"])
timeDF=timeDF[timeDF['number_of_casualties']>2].reset_index(drop=True)

nums=[]
weekday=["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
print("Calculating accident count day of week: ")
for i in range(1, 8):
    day = timeDF[timeDF['day_of_week'] == i]
    count=day['day_of_week'].count()
    nums.append(count)
    #print(count, " on ", weekday[i-1]) 
#print("Done counting accident count in day of week.")

plt.plot(weekday, nums)
plt.xlabel('weekday')
plt.ylabel('number accidents')
plt.title('Number Accidents per Weekday')
plt.show()

'''
Calculating accident count day of week: 
687  on  Monday
614  on  Tuesday
621  on  Wednesday
632  on  Thursday
645  on  Friday
798  on  Saturday
820  on  Sunday
Done counting accident count in day of week.
'''

'''
On what areas would you recommend the planning team focus their brainstorming efforts to reduce major incidents?
'''

from datetime import datetime

hours=list(timeDF['time'].astype(str).str[:2])
hoursDic={} #store into dictionary with hours by key and number accidents as values

for i in range(0,10):
    count=hours.count('0'+str(i))
    hoursDic[i]=count
for i in range(10,24):
    count=hours.count(str(i))
    hoursDic[i]=count
    
print(hoursDic)

plt.bar(hoursDic.keys(),hoursDic.values())
plt.title('Accidents on an Hourly Basis')
plt.xlabel('Time of Accident by Hour')
plt.ylabel('Number Accidents')
plt.show()


'''
#LocDF will locate the most common places for accidents.
'''

locDF=aDF.filter(['longitude', 'latitude']).round(2)
locDF = locDF.applymap(str) #need to combine two numbers in next step
locDF['Loc']=locDF['longitude']+ locDF['latitude'] #combines two dataframes as str. Now, count to see if same number populates.
loc=sorted(list(locDF['Loc']))

from collections import Counter
count=Counter(loc) #counts how many in a given list
topTen=count.most_common(10) #only need the top ones

print("Top ten most dangerous locations: ")
print("Lat  " , " Long ", " Count ")
for t in topTen:
    lat=t[0][:6]
    long=t[0][6:]
    count=t[1]
    print(lat, " ", long, "  ", count)
    
'''
Top ten most dangerous locations: 
Lat    Long   Count 
-0.165   1.52    91
-0.135   1.43    75
-0.151   .5    74
-0.175   1.52    71
-0.135   1.51    70
-0.145   1.54    70
-0.065   1.51    65
-0.075   1.52    64
-0.145   1.52    64
-0.075   1.58    62
'''

ldata = pd.read_csv(r'./data/road-safety-lookups.csv')
#print(lDF.head()) # table field name code/format label

# Total missing values for each feature
def checkNA():
	lDF.isnull().sum() 
'''
table            0
field name       0
code/format      8
label           10
note           119
'''

print("Here are the top ten accident types: ")
lDF = pd.DataFrame(data=ldata, columns=['table', 'field name'])
lcount=lDF.groupby(by=['field name']).count().sort_values(by='table', ascending=False).head(10)
print(lcount)
'''
Here are the top ten accident types: 
                                         table
field name                                    
junction_detail                             11
weather_conditions                          10
carriageway_hazards                         10
special_conditions_at_site                  10
road_surface_conditions                      9
road_type                                    8
pedestrian_crossing_physical_facilities      8
day_of_week                                  7
junction_control                             7
second_road_class                            7
'''
