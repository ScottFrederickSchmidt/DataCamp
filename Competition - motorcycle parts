#What are the total sales for each payment method?
df = pd.DataFrame(df) #turn series into a DF
payType=df.groupby(['payment']).sum()
#print(payType['total'])

'''
payment
Cash            19199.10
Credit card    110271.57
Transfer       159642.33
Name: total, dtype: float64
'''

#What is the average unit price for each product line?
product_line=round(df.groupby(['product_line']).mean(),2)
product_line_total=product_line['total']
#print(product_line_total)

'''
product_line
Breaking system          166.74
Electrical system        225.97
Engine                   622.06
Frame & body             415.81
Miscellaneous            222.67
Suspension & traction    320.24
Name: total, dtype: float64
'''

#Create plots to visualize findings for questions 1 and 2.
# I used this article as a template: https://realpython.com/python-histograms/
import matplotlib.pyplot as plt
import numpy as np

# An "interface" to matplotlib.axes.Axes.hist() method
n, bins, patches = plt.hist(x=product_line_total, bins='auto', color='#0504aa',
                            alpha=0.7, rwidth=0.85)
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.title('Product Line Total')

#average purchase value by client type
df_clients=round(df.groupby(['client_type']).mean(), 2)
df_clients_total=df_clients['total']
#print(df_clients_total)

'''
client_type
Retail       167.06
Wholesale    709.52
Name: total, dtype: float64
'''

#total purchase value by product line
productDF=df.groupby('product_line')['total'].sum().reset_index()
productDF=productDF.sort_values(by='total', ascending=False)
#print(productDF)
'''
         product_line     total
5  Suspension & traction  73014.21
3           Frame & body  69024.73
1      Electrical system  43612.71
0        Breaking system  38350.15
2                 Engine  37945.38
4          Miscellaneous  27165.82
'''

productDF.hist(by='total')
plt.show()


#Summarize your findings.
'''
The above product_line is grouped and then sorted by "total" amount.
This allows the user to see the data easily sorted from high to low.  
'''
